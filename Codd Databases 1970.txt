Edgar F. Codd
The following is the text of an IBM Research News intranet article published
on April 23, 2003.

Former IBM Fellow Edgar (Ted) Codd 
passed away on April 18 
Best known for creating the “relational” model for 
representing data that led to today’s database industry
Edgar (Ted) Codd, the mathematician and former IBM Fellow best known for creating the “relational” model for representing data that led to today’s $12 billion database industry, died Friday, April 18, at his home in Florida at age 79.
Most of the innumerable data transactions we routinely make today -- using bank accounts and credit cards, trading stock, making travel reservations and participating in online auctions -- use relational databases based on the abstract and sophisticated mathematical theory that Codd first published in 1970 when he worked at IBM’s San Jose Research Laboratory, the forerunner to today’s Almaden Research Center.
It didn’t come easily, however. The computing landscape in the early 1970s was a far cry from the gigahertz, terabyte and petaflop scene today.
Computer calculations cost hundreds of dollars a minute, so great human effort was spent to make programs as efficient as possible before they were run. Early databases used either a rigid hierarchical structure or a complex navigational plan of pointers to the physical locations of the data on magnetic tapes. Teams of programmers were needed to express queries to extract meaningful information. While such databases could be efficient in handling the specific data and queries they were designed for, they were absolutely inflexible. New types of queries required complex reprogramming, and adding new types of data forced a total redesign of the database itself.
In his landmark paper, “A Relational Model of Data for Large Shared Data Banks,” Codd proposed replacing the hierarchical or navigational structure with simple tables containing rows and columns.
“Ted’s basic idea was that relationships between data items should be based on the item’s values, and not on separately specified linking or nesting. This notion greatly simplified the specification of queries and allowed unprecedented flexibility to exploit existing data sets in new ways,” said Don Chamberlin, co-inventor of SQL, the industry-standard language for querying relational databases, and a research staff member at Almaden. “He believed that computer users should be able to work at a more natural-language level and not be concerned about the details of where or how the data was stored.”
At a 1995 reunion of IBM’s early relational database scientists, Chamberlin recalled having an epiphany as he first heard Codd describe his relational model at an internal seminar.
“Codd had a bunch of fairly complicated queries,” Chamberlin said. “And since I’d been studying CODASYL (the language used to query navigational databases), I could imagine how those queries would have been represented in CODASYL by programs that were five pages long that would navigate through this labyrinth of pointers and stuff. Codd would sort of write them down as one-liners. ... (T)hey weren’t complicated at all. I said, ‘Wow.’ This was kind of a conversion experience for me. I understood what the relational thing was about after that.”
The idea of relying only on value-based relationships was quite a radical concept at that time, and many people were skeptical. They didn’t believe that machine-made relational queries would be able to perform as well as hand-tuned programs written by expert human navigators. But the increasing power of newer computers, the random-access nature of magnetic hard-disk drives, and a long string of software innovations enabled scientists to bring the advantages of Codd’s idea to customers.
System R’s practical implementation
In order for the relational model to be accepted, it had to be proved by an industrial-strength implementation. That was the goal of the System R project, begun at IBM’s San Jose Research Laboratory in 1973.
Among the critical technologies developed for System R were:
Structured Query Language (SQL), developed by Chamberlin and Ray Boyce, for expressing queries.
Pat Selinger’s cost-based optimizer, which automatically translates a high-level query into an efficient plan for executing the query.
Raymond Lorie’s query compiler, which saved query plans for future use.
Ad hoc query formulation and execution allowing rapid development and testing. 
Online data definition in support of new applications without shutting down the system.
Boyce also worked with Codd to develop the Boyce-Codd Normal Form for efficiently designing relational database tables so information was not needlessly duplicated in different tables.
System R was a success, and in 1981 IBM announced its first relational database product, SQL/DS. DB2, initially for large mainframe machines, was announced in 1983. Now able to store data on handhelds all the way up to supercomputers, IBM’s DB2 family of databases handles billions of transactions per day and is one of its most successful software products.
In addition to IBM’s System R researchers, other pioneers who rushed to exploit Codd’s relational concepts in the 1970s included Mike Stonebraker’s INGRES team at UC-Berkeley and Larry Ellison, whose Relational Software Inc. produced the first commercially available relational database in 1977. Six years later, Ellison renamed his company Oracle.
Codd’s early accomplishments
A native of England, Codd attended Oxford University, where he earned degrees in mathematics and chemistry, and flew in the Royal Air Force during World War II. He then moved to the United States and joined IBM as a mathematical programmer in 1949 for the Selective Sequence Electronic Calculator, a huge tube-based computer that had the speed and flexibility to solve many of the largest scientific problems of its day.
He then invented a novel “multiprogramming” method for IBM’s pioneering STRETCH computer. This method enabled STRETCH, the forerunner to modern mainframe computers, to run several programs at the same time.
After earning his doctorate in computer science at the University of Michigan in 1967 under a full scholarship from IBM, Codd moved to IBM’s San Jose Research Laboratory in San Jose, where he conceived his relational model.
Codd was named an IBM Fellow in 1976, and in 1981 he received the Turing Award, the highest technical honor in the computing profession. In 2002, Forbes Magazine listed Codd’s relational model of data as one of the most important innovations of the previous 85 years.
His longtime collaborator, Chris Date, said “Codd’s biggest overall achievement was to make database management into a science. He put the field on solid scientific footing by providing a theoretical framework -- the relational model -- within which a variety of important problems could be attacked in a scientific manner.”
Janet Perna, general manager of Data Management Solutions for IBM’s Software Group, expressed her admiration for the inventor of the product for which she is now responsible. She remarked that “Ted Codd will forever be remembered as the father of relational database. His remarkable vision and intellectual genius ushered in a whole new realm of innovation that has shaped the world of technology today -- but perhaps his greatest achievement is inspiring generations of people who continue to build upon the foundations he laid. Database professionals all over the world mourn his passing”